@using MeasuresMVC.Utils;

@model MeasuresMVC.Models.MeasureModel

@{
	ViewBag.Title = "Details";
}

<div>
	<h2>Measure Details</h2>
	<hr />
	<dl class="dl-horizontal">
		@Html.Partial("~/Views/Customer/_PartialCustomerMin.cshtml", Model.customer)
	</dl>
	<p>
		@Html.ActionLink("Edit Customer", "Edit", new { id = Model.CustomerId }) |
		@Html.ActionLink("Back to Customer", "Details", "Customer", new { id = Model.customer.Id }, null) |
		@Html.ActionLink("Back to List", "Index", "Customer", null, null)
	</p>

	@using (Html.BeginForm("Details", "Measure", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">

			<hr />
			@Html.ValidationSummary(true)
			@Html.HiddenFor(model => model.MeasureId)
			@Html.HiddenFor(m => m.CustomerId)

			<div class="form-group">
				@Html.LabelFor(model => model.measure.Store, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DisplayFor2(model => model.measure.Store.NickName)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.measure.SpecialInstructions, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.TextAreaFor(model => model.measure.SpecialInstructions, 10, 200, new { style = "width: 650px" })
					@Html.ValidationMessageFor(model => model.measure.SpecialInstructions)
				</div>
			</div>

			@*<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save" class="btn btn-default" />
					</div>
				</div>*@
		</div>


		@*</div>*@
		<div>
			<h4>Material List</h4>

			@Html.ActionLink("Add Material", "AddMaterial", new { id = Model.measure.Id })
			<table class="table">
				<tr>
					<th>
						Description
					</th>
					<th>
						Type
					</th>
					<th>
						Width
					</th>
					<th>
						Alt. Width
					</th>
					<th>
						Pattern Width
					</th>
					<th>
						Pattern Length
					</th>
				</tr>
				@foreach (var item in Model.measure.Materials)
				{
					if (!item.Deleted || ViewBag.ShowDeleted)
					{
						<tr>
							<td>
								@Html.DisplayFor(ddd => item.Description)
							</td>
							<td>
								@Html.DisplayFor(ddd => item.MaterialType.Description)
							</td>
							<td>
								@Html.DisplayFor(ddd => item.Width.Value)
							</td>
							<td>
								@Html.DisplayFor(ddd => item.AltWidth.Value)
							</td>
							<td>
								@Html.DisplayFor(ddd => item.PatternMatchWidth)
							</td>
							<td>
								@Html.DisplayFor(ddd => item.PatternMatchLength)
							</td>
							<td>
								@Html.ActionLink("Edit", "EditMaterial", new { id = item.Id }) |
								@if (item.Deleted)
								{
									@Html.ActionLink("Undelete", "UndeleteMaterial", new { id = item.Id })
								}
								else
								{
									@Html.ActionLink("Delete", "DeleteMaterial", new { id = item.Id })
								}
							</td>
						</tr>
					}
				}
			</table>
		</div>
		<hr />
		if (Model.measure.Materials.Count() > 0)
		{
			@*using (Html.BeginForm("Details", "Measure", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
				{
					@Html.AntiForgeryToken()
					@Html.HiddenFor(m => m.MeasureId)
					@Html.HiddenFor(m => m.CustomerId)*@

			<div>
				<h4>Room Assignment</h4>
				<table class="table">
					@Html.EditorFor(model => model.Rooms)
				</table>
			</div>
		}
		<p>
			<div class="form-group">
				<div class="col-md-4">
					<input type="submit" value="Save" class="btn btn-default" /> |
					@Html.ActionLink("Back to Customer", "Details", "Customer", new { id = Model.customer.Id }, null)
				</div>
			</div>
		</p>
	}
</div>
