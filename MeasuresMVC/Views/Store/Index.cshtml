@*Reference the Infragistics ASP.NET MVC Helpers Assembly*@
@using Infragistics.Web.Mvc

@model IQueryable<MeasuresMVC.Models.StoreView>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@(Html.Infragistics().Loader()
		.ScriptPath(Url.Content("~/Infragistics/js/"))
		.CssPath(Url.Content("~/Infragistics/css/"))
		.Render()
)

<h2>Stores</h2>
@(Html.Infragistics()
	.Grid(Model)
	.ID("grid1")
		.Width("100%")
		.AutoGenerateColumns(false)
		.AutoGenerateLayouts(false)
		.Columns(column =>
		{
			column.For(x => x.Active).HeaderText("Active").Hidden(true);
			column.For(x => x.Branch).HeaderText("Branch").Width("20%");
			column.For(x => x.Number).HeaderText("Number").Width("10%");
			column.For(x => x.Address).HeaderText("Address").Width("30%");
			column.For(x => x.City).HeaderText("City").Width("20%");
			column.For(x => x.State).HeaderText("State").Width("10%");
			column.For(x => x.District).HeaderText("District").Width("10%");
		})
	.Features( features =>
	{
		features.Sorting().Type(OpType.Remote);
		features.Paging().Type(OpType.Remote);
		features.Filtering().Mode(FilterMode.Advanced);
		features.Selection().Mode(SelectionMode.Row);
		features.Resizing();
	}		)
	.DataSourceUrl(Url.Action("GetList"))
	.Render()
)
<script>
	$(document).ready(function () {
		$('#grid1').dblclick(function (e) {
			var row =  $('#grid1').igGridSelection('selectedRow');
			var dataview = $('#grid1').data('igGrid').dataSource.dataView();
			var cellValue = dataview[row.index]["Id"];
			var address = "@Url.Action("Edit")" + "/" + cellValue;
			window.location = address;
		});
	})
</script>
